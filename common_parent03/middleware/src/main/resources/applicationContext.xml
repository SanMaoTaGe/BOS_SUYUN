<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:amq="http://activemq.apache.org/schema/core" xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd

       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd




       http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms.xsd
       http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd">


    <!--
            #########################################################
            开启IOC注解.
            指定Spring进行扫描的包，如果该包中的类使用了@Component @Controller@Service等注解，会把这些类注册为bean
            ！！！！不要扫描DAO ！！！！
            DAO包下的类要使用Spring Data JPA框架进行扫描
            #########################################################
        -->
    <context:component-scan base-package="com.vincent.activeMQ"/>

    <!--
            ################################# 指定ActiveMQ 连接工厂 ########################################
            真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供
        -->

    <amq:connectionFactory userName="admin" password="admin" id="amqConnectionFactory"
                           brokerURL="tcp://localhost:61616"></amq:connectionFactory>

    <!--
        ################################# 指定Spring Caching连接工厂 #################################
    -->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="amqConnectionFactory"></property>
        <!-- Session缓存数量 -->
        <property name="sessionCacheSize" value="100"/>
    </bean>
    <!--
        ################################# 指定消息的消费者 #################################
    -->

    <!--

        destination-type : 监听的消息的类型,queue(队列模式),topic(主题模式)
        container-type : 容器类型,不同的容器对会话的处理有着不同的策略
        acknowledge : 应答机制
    -->
    <jms:listener-container destination-type="queue" container-type="default" connection-factory="connectionFactory"
                            acknowledge="auto">
        <!--
			destination : 监听的消息队列的名字
			ref : 真正的消息消费者
		-->
        <jms:listener destination="sms_message" ref="SMSConsumer"/>
    </jms:listener-container>


</beans>